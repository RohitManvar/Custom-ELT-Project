version: '3.8'

services:
  source_postgres:
    image: postgres:15
    container_name: source_postgres
    ports:
      - '5432:5432'  # Host port 5432 -> container port 5432
    networks:
      - elt_network
    environment:
      POSTGRES_DB: source_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    volumes:
      - ./source_db_init/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d source_db"]
      interval: 5s
      timeout: 3s
      retries: 5

  destination_postgres:
    image: postgres:15
    container_name: destination_postgres
    ports:
      - "5433:5432"  # Host port 5433 -> container port 5432
    networks:
      - elt_network
    environment:
      POSTGRES_DB: destination_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d destination_db"]
      interval: 5s
      timeout: 3s
      retries: 5

  elt_script:
    build:
      context: ./elt
      dockerfile: Dockerfile
    command: ['python', 'elt_script.py']
    networks:
      - elt_network
    depends_on:
      source_postgres:
        condition: service_healthy
      destination_postgres:
        condition: service_healthy

  dbt:
    image: ghcr.io/dbt-labs/dbt-postgres:1.4.7
    container_name: dbt
    command:
      [
        "run",
        "--profiles-dir",
        "/root",
        "--project-dir",
        "/dbt"
      ]
    networks:
      - elt_network
    volumes:
      - ./custom_postgres:/dbt
      - ~/.dbt:/root
    depends_on:
      elt_script:
        condition: service_completed_successfully
      destination_postgres:
        condition: service_healthy
    environment:
      DBT_PROFILE: custom_postgres
      DBT_TARGET: dev

networks:
  elt_network:
    driver: bridge
