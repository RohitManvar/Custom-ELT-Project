version: '3.8'

services:
  source_postgres:
    image: postgres:15
    container_name: source_postgres
    ports:
      - '5432:5432'
    networks:
      - elt_network
    environment:
      POSTGRES_DB: source_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    volumes:
      - ./source_db_init/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d source_db"]
      interval: 5s
      timeout: 3s
      retries: 5

  destination_postgres:
    image: postgres:15
    container_name: destination_postgres
    ports:
      - "5433:5432"  # Host port 5433 -> container port 5432
    networks:
      - elt_network
    environment:
      POSTGRES_DB: destination_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d destination_db"]
      interval: 5s
      timeout: 3s
      retries: 5

  elt_script:
    build:
      context: ./elt
      dockerfile: Dockerfile
    command: ['python', 'elt_script.py']
    networks:
      - elt_network
    depends_on:
      source_postgres:
        condition: service_healthy
      destination_postgres:
        condition: service_healthy

  dbt:
    image: ghcr.io/dbt-labs/dbt-postgres:1.4.7
    container_name: dbt
    command:
      [
        "run",
        "--profiles-dir",
        "/root",
        "--project-dir",
        "/dbt"
      ]
    networks:
      - elt_network
    volumes:
      - ./custom_postgres:/dbt
      - ~/.dbt:/root
    depends_on:
      elt_script:
        condition: service_completed_successfully
      destination_postgres:
        condition: service_healthy
    environment:
      DBT_PROFILE: custom_postgres
      DBT_TARGET: dev

  postgres:
    image: postgres:latest
    network:
      - elt_network
    environment:
      - POSTGRES_USER = airflow
      - POSTGRES_PASSWORD = airflow
      - POSTGRES_DB = airflow

  init-airflow:
    image: apache/airflow:latest
    depends_on:
      - postgres
    networks:
      - elt_network
    environment:
      - AIRFLOW__DATABASE__SQL__ALCHEMY__CONN=postgres+psycopg2://airflow:airflow@postgres/airflow
    command: >
      bash -c "airflow db init &&
              airflow users create --usename airflow --password password --firstname  John --lastname role Admin --email admin@example.com"

  webserver:
    build:
      context:
      dockerfile: Dockerfile
    user: root
    depends_on:
      - postgres
    networks:
      - elt_network
    extra_hosts:
      -  "host.docker.internal: host-gateway"
    volumes:
      - ./airlow/dags:/opt/airflow/dags
      - ./elt:/opt/airflow/elt
      - ./custom_postgres:/opt/dbt 
      - ~/.dbt:/root/.dbt
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - LOAD_EX=n
      - EXECUTOR=Local
      - AIRFLOW__DATABASE__SQL__ALCHEMY__CONN=postgres+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FORNATE_KEY=du9CBzeR1-q8bQGQc9c0-rDqPpVXZvmI2cT2846ECWI=
      - AIRFLOW__WEBSERVER__DEFAULT__USER_USERUSERNAME=airflow
      - AIRFLOW__WEBSERVER__DEFAULT__USER_PASSWORD=password
      - AIRFLOW_WWW_USER_USERNAME=airflow
      - AIRFLOW_WWW_USER_PASSWORD=password
      - AIRFLOW__WEBSERVER__SECRET_KEY=secret
    ports:
      - "8080:8080"
    command: webserver

  scheduler:
    build:
      context:
      dockerfile: Dockerfile
    user: root
    depends_on:
      - postgres
    networks:
      - elt_network
    extra_hosts:
      -  "host.docker.internal: host-gateway"
    volumes:
      - ./airlow/dags:/opt/airflow/dags
      - ./elt:/opt/airflow/elt
      - ./custom_postgres:/opt/dbt 
      - ~/.dbt:/root/.dbt
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - LOAD_EX=n
      - EXECUTOR=Local
      - AIRFLOW__DATABASE__SQL__ALCHEMY__CONN=postgres+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FORNATE_KEY=du9CBzeR1-q8bQGQc9c0-rDqPpVXZvmI2cT2846ECWI=
      - AIRFLOW__WEBSERVER__DEFAULT__USER_USERUSERNAME=airflow
      - AIRFLOW__WEBSERVER__DEFAULT__USER_PASSWORD=password
      - AIRFLOW_WWW_USER_USERNAME=airflow
      - AIRFLOW_WWW_USER_PASSWORD=password
      - AIRFLOW__WEBSERVER__SECRET_KEY=secret
    ports:
      - "8080:8080"
    command: webserver
    

networks:
  elt_network:
    driver: bridge
